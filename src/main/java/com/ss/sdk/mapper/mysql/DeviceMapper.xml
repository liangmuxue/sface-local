<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ss.sdk.mapper.DeviceMapper">

    <select id="findAllDevice" resultType="com.ss.sdk.model.Device">
        SELECT cplat_device_id AS cplatDeviceId, ip, port, user_name AS userName, password, state FROM sface_device WHERE
        is_delete = 1
    </select>

    <update id="updateDevice" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" separator=";" close="">
            update sface_device
            <set>
                state = #{item.state}
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <select id="findWhiteList" resultType="com.ss.sdk.model.WhiteList">
        SELECT people_id AS peopleId, device_id AS productCode FROM sface_white_list
    </select>

    <insert id="insertIssue" parameterType="com.ss.sdk.model.Issue">
        INSERT INTO sface_issue (people_id, device_id, people_face_path, issue_time, issueStatus)
        VALUES (#{peopleId}, #{productCode}, #{peopleFacePath}, #{issueTime}, #{issueStatus} )
    </insert>

    <insert id="insertWhiteList" parameterType="com.ss.sdk.model.Issue">
        INSERT INTO sface_white_list (people_id, device_id)
        VALUES (#{peopleId}, #{productCode})
    </insert>

    <select id="findIssueList" resultType="com.ss.sdk.model.Issue">
        SELECT id, people_id AS peopleId, device_id AS deviceId, issueStatus FROM sface_issue WHERE return_result = 0
    </select>

    <update id="updateIssue" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" separator=";" close="">
            update sface_issue
            <set>
                return_result = 1
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <delete id="delWhiteList" parameterType="com.ss.sdk.model.Issue">
        DELETE FROM sface_white_list WHERE people_id = #{peopleId} AND device_id = #{deviceId}
    </delete>

    <insert id="insertCapture" parameterType="com.ss.sdk.model.Capture">
        INSERT INTO sface_capture (people_id, device_id, opendoor_mode, result_code, capture_url, compare_date)
        VALUES (#{peopleId}, #{deviceId}, #{opendoorMode}, #{resultCode}, #{captureUrl}, #{compareDate})
    </insert>

    <select id="findCommonCaptureList" resultType="com.ss.sdk.model.Capture">
        SELECT
            c.people_id AS peopleId,
            d.cplat_device_id AS productCode,
            opendoor_mode AS opendoorMode,
            result_code AS resultCode,
            capture_url AS captureUrl,
            compare_date AS compareDate
        FROM sface_capture c
        LEFT JOIN sface_device d ON c.device_id = d.device_id
        LEFT JOIN sface_capture_time ct ON 1=1
        WHERE  <![CDATA[c.compare_date > ct.common_time]]> AND c.opendoor_mode != 2
    </select>

    <select id="findRemoteCaptureList" resultType="com.ss.sdk.model.Capture">
        SELECT
        c.people_id AS peopleId,
        d.cplat_device_id AS productCode,
        opendoor_mode AS opendoorMode,
        result_code AS resultCode,
        capture_url AS captureUrl,
        compare_date AS compareDate
        FROM sface_capture c
        LEFT JOIN sface_device d ON c.device_id = d.device_id
        LEFT JOIN sface_capture_time ct ON 1=1
        WHERE  <![CDATA[c.compare_date > ct.remote_time]]> AND c.opendoor_mode = 2
    </select>

    <select id="findCommonMaxTime" resultType="java.lang.String">
        SELECT MAX(compare_date) FROM sface_capture WHERE opendoor_mode != 2
    </select>

    <select id="findRemoteMaxTime" resultType="java.lang.String">
        SELECT MAX(compare_date) FROM sface_capture WHERE opendoor_mode = 2
    </select>

    <update id="updateCommonTime" parameterType="java.lang.String">
        UPDATE sface_capture_time SET common_time = #{updateTime}
    </update>

    <update id="updateRemoteTime" parameterType="java.lang.String">
        UPDATE sface_capture_time SET remote_time = #{updateTime}
    </update>

</mapper>