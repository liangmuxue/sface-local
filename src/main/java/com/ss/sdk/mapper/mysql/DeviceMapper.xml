<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ss.sdk.mapper.DeviceMapper">

    <!--查询所有设备-->
    <select id="findAllDevice" resultType="com.ss.sdk.model.Device">
        SELECT cplat_device_id AS cplatDeviceId, ip, port, user_name AS userName, password, state, device_type AS deviceType, device_type_detail AS deviceTypeDetail FROM sface_device WHERE
        is_delete = 1
    </select>

    <!--条件查询设备-->
    <select id="findDevice" resultType="com.ss.sdk.model.Device" parameterType="com.ss.sdk.model.Device">
        SELECT
        device_id AS deviceId,
        cplat_device_id AS cplatDeviceId,
        ip,
        port,
        user_name AS userName,
        password,
        state,
        device_type AS deviceType,
        device_type_detail AS deviceTypeDetail
        FROM sface_device
        <where>
            is_delete = 1
            <if test="deviceType !=null">
                and device_type =#{deviceType}
            </if>
            <if test="deviceTypeDetail !=null">
                and device_type_detail =#{deviceTypeDetail}
            </if>
            <if test="productCode !=null and productCode !=''">
                and cplat_device_id =#{productCode}
            </if>
            <if test="deviceId !=null and deviceId !=''">
                and device_id =#{deviceId}
            </if>
        </where>
    </select>

    <update id="updateDevice" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" separator=";" close="">
            update sface_device
            <set>
                state = #{item.state}
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <select id="findWhiteList" resultType="com.ss.sdk.model.WhiteList">
        SELECT people_id AS peopleId, device_id AS productCode FROM sface_white_list
    </select>

    <insert id="insertIssue" parameterType="com.ss.sdk.model.Issue">
        INSERT INTO sface_issue (people_id, device_id, people_face_path, issue_time, issueStatus, fail_reason)
        VALUES (#{peopleId}, #{productCode}, #{peopleFacePath}, #{issueTime}, #{issueStatus}, #{errorMessage} )
    </insert>

    <insert id="insertWhiteList" parameterType="com.ss.sdk.model.Issue">
        INSERT INTO sface_white_list (people_id, device_id)
        VALUES (#{peopleId}, #{productCode})
    </insert>

    <select id="findIssueList" resultType="com.ss.sdk.model.Issue">
        SELECT id, people_id AS peopleId, device_id AS productCode, issueStatus, fail_reason AS errorMessage FROM sface_issue WHERE return_result = 0
    </select>

    <update id="updateIssue" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" separator=";" close="">
            update sface_issue
            <set>
                return_result = 1
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <delete id="delWhiteList" parameterType="com.ss.sdk.model.Issue">
        DELETE FROM sface_white_list WHERE people_id = #{peopleId} AND device_id = #{productCode}
    </delete>
    <!--新增抓拍信息-->
    <insert id="insertCapture" parameterType="com.ss.sdk.model.Capture">
        INSERT INTO sface_capture (people_id, device_id, opendoor_mode, result_code, capture_url, capture_full_url, compare_date, recog_score, temp, temp_state, create_time)
        VALUES (#{peopleId}, #{deviceId}, #{opendoorMode}, #{resultCode}, #{captureUrl}, #{captureFullUrl}, #{compareDate}, #{recogScore}, #{temp}, #{tempState}, #{createTime})
    </insert>

    <!--修改抓拍照信息-->
    <update id="updateCapture" parameterType="com.ss.sdk.model.Capture">
        update sface_capture
        <set>
            <if test="captureUrl != null">
                capture_url = #{captureUrl},
            </if>
            <if test="captureFullUrl != null">
                capture_full_url = #{captureFullUrl},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findCommonCaptureList" resultType="com.ss.sdk.model.Capture" parameterType="com.ss.sdk.model.Capture">
        SELECT
            c.people_id AS peopleId,
            d.cplat_device_id AS productCode,
            opendoor_mode AS opendoorMode,
            result_code AS resultCode,
            capture_url AS captureUrl,
            capture_full_url AS captureFullUrl,
            compare_date AS compareDate,
            recog_score as recogScore,
            temp AS temp,
            temp_state AS tempState,
            create_time AS createTime
        FROM sface_capture c
        LEFT JOIN sface_device d ON c.device_id = d.device_id
        LEFT JOIN sface_capture_time ct ON 1=1
        <where>
            <![CDATA[c.create_time > ct.common_time]]> AND c.opendoor_mode != 2
        </where>
    </select>

    <!--查找云从设备抓拍记录-->
    <select id="findCloudwalk" resultType="com.ss.sdk.model.Capture" parameterType="com.ss.sdk.model.Capture">
        SELECT
        id
        FROM sface_capture
        <where>
            opendoor_mode = -1
            <if test="captureUrl !=null and captureUrl !=''">
                and capture_url is null
                and capture_full_url is not null
            </if>
            <if test="captureFullUrl !=null and captureFullUrl !=''">
                and capture_full_url is null
                and capture_url is not null
            </if>
            and <![CDATA[compare_date + 1000 > #{compareDate}]]>
            and <![CDATA[compare_date - 1000 < #{compareDate}]]>
            and device_id = #{deviceId}
        </where>
    </select>

    <select id="findRemoteCaptureList" resultType="com.ss.sdk.model.Capture">
        SELECT
        c.people_id AS peopleId,
        d.cplat_device_id AS productCode,
        opendoor_mode AS opendoorMode,
        result_code AS resultCode,
        capture_url AS captureUrl,
        capture_full_url AS captureFullUrl,
        compare_date AS compareDate,
        create_time AS createTime
        FROM sface_capture c
        LEFT JOIN sface_device d ON c.device_id = d.device_id
        LEFT JOIN sface_capture_time ct ON 1=1
        WHERE  <![CDATA[c.create_time > ct.remote_time]]> AND c.opendoor_mode = 2
    </select>

    <select id="findCommonMaxTime" resultType="java.lang.String">
        SELECT MAX(create_time) FROM sface_capture WHERE opendoor_mode != 2
    </select>

    <select id="findRemoteMaxTime" resultType="java.lang.String">
        SELECT MAX(create_time) FROM sface_capture WHERE opendoor_mode = 2
    </select>

    <update id="updateCommonTime" parameterType="java.lang.String">
        UPDATE sface_capture_time SET common_time = #{updateTime}
    </update>

    <update id="updateRemoteTime" parameterType="java.lang.String">
        UPDATE sface_capture_time SET remote_time = #{updateTime}
    </update>

    <select id="getPersonPermission" parameterType="com.ss.sdk.model.GuanpinRequest" resultType="java.lang.Integer">
        SELECT count(*) FROM sface_capture WHERE
        opendoor_mode = 1 AND people_id = #{idcardNum} AND device_id = #{deviceKey}
        AND result_code = 1 AND temp_state = 0
        <![CDATA[AND compare_date <= #{time}]]> <![CDATA[AND compare_date >= (#{time} - 2000)]]>
    </select>

</mapper>